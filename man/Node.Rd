% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Node.R
\docType{class}
\name{Node}
\alias{Node}
\title{R6 class: \code{Node}}
\description{
R6 class: \code{Node}

R6 class: \code{Node}
}
\section{Methods}{

\describe{
  \item{\code{$new(id, depth, subset.idx, grid, …)}}{Constructor.}
  \item{\code{$computeSplit(X, Y, objective, …)}}{Find best split,
    update node metadata.}
  \item{\code{$computeChildren(X, Y, testdata, objective, …)}}{Create
    \code{left.child} and \code{right.child} as new \code{Node}
    instances.}
}
}

\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Integer. Identifier within its depth level
(\code{1} = left, \code{2} = right).}

\item{\code{depth}}{Integer. Depth of the node; root starts at
\code{1}.}

\item{\code{subset.idx}}{Integer vector with row indices of
\code{testdata} that fall into this node.}

\item{\code{objective.value}}{Numeric vector of objective values for the
node (one per feature).}

\item{\code{objective.value.parent}}{Numeric vector holding the parent's
objective values.}

\item{\code{grid}}{Named list; each element is the set of grid
points (column names).}

\item{\code{id.parent}}{Integer. ID of the parent node (\code{NULL} for
root).}

\item{\code{child.type}}{Character. Either \code{"<="} or \code{">"} to
indicate left / right traversal.}

\item{\code{split.feature}}{Character. Feature chosen for splitting this
node.}

\item{\code{split.value}}{Numeric. Threshold applied to
\code{split.feature}.}

\item{\code{children}}{Two-element list with \code{left.child} and
\code{right.child} (each another \code{Node} or \code{NULL}).}

\item{\code{stop.criterion.met}}{Logical. Whether the minimal node size or
improvement threshold has been reached.}

\item{\code{improvement.met}}{Logical. Whether the improvement threshold
(\code{impr.par}) was not met.}

\item{\code{intImp}}{Numeric. Interaction importance of the node.}

\item{\code{local}}{Optional cached copy of centered ICE / ALE /
SHAP data used for fast re-computation.}

\item{\code{strategy}}{An object of class \code{Strategy} that defines
how to transform data and compute node heterogeneity.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{local}}{Optional cached copy of centered ICE / ALE /
SHAP data used for fast re-computation.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Node-new}{\code{Node$new()}}
\item \href{#method-Node-split_node}{\code{Node$split_node()}}
\item \href{#method-Node-find_best_split}{\code{Node$find_best_split()}}
\item \href{#method-Node-create_children}{\code{Node$create_children()}}
\item \href{#method-Node-create_child_grids}{\code{Node$create_child_grids()}}
\item \href{#method-Node-apply_split}{\code{Node$apply_split()}}
\item \href{#method-Node-get_cached_or_compute}{\code{Node$get_cached_or_compute()}}
\item \href{#method-Node-clone}{\code{Node$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-new"></a>}}
\if{latex}{\out{\hypertarget{method-Node-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$new(
  id,
  depth = NULL,
  subset.idx,
  grid,
  id.parent = NULL,
  child.type = NULL,
  objective.value.parent = NULL,
  objective.value.j = NULL,
  objective.value = NULL,
  improvement.met = FALSE,
  intImp = NULL,
  intImp.j = NULL,
  strategy = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-split_node"></a>}}
\if{latex}{\out{\hypertarget{method-Node-split_node}{}}}
\subsection{Method \code{split_node()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$split_node(
  Z,
  Y,
  objective.value.root.j,
  objective.value.root,
  min.node.size,
  n.quantiles,
  impr.par
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-find_best_split"></a>}}
\if{latex}{\out{\hypertarget{method-Node-find_best_split}{}}}
\subsection{Method \code{find_best_split()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$find_best_split(Z, Y.curr, min.node.size, n.quantiles)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-create_children"></a>}}
\if{latex}{\out{\hypertarget{method-Node-create_children}{}}}
\subsection{Method \code{create_children()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$create_children(
  Z,
  Y,
  split_info,
  objective.value.root.j,
  objective.value.root,
  impr.par
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-create_child_grids"></a>}}
\if{latex}{\out{\hypertarget{method-Node-create_child_grids}{}}}
\subsection{Method \code{create_child_grids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$create_child_grids(split.feature, split.value, is.categorical)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-apply_split"></a>}}
\if{latex}{\out{\hypertarget{method-Node-apply_split}{}}}
\subsection{Method \code{apply_split()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$apply_split(split_info, children_info)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-get_cached_or_compute"></a>}}
\if{latex}{\out{\hypertarget{method-Node-get_cached_or_compute}{}}}
\subsection{Method \code{get_cached_or_compute()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$get_cached_or_compute(key, compute_func)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Node-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
