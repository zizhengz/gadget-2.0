% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_tree.R
\name{build_tree}
\alias{build_tree}
\title{Build a Feature Effect Tree}
\usage{
build_tree(
  effect,
  data,
  effect.method = "pd",
  feature.set = NULL,
  split.feature = NULL,
  target.feature.name,
  n.split = 2,
  impr.par = 0.1,
  min.node.size = 10,
  n.quantiles = NULL
)
}
\arguments{
\item{effect}{(`R6` object or list)\cr
An object containing feature effect results, typically from `FeatureEffect` or `FeatureEffects`.}

\item{data}{(`data.frame`)\cr
Data frame containing the features and the target variable.}

\item{effect.method}{(`character(1)`)\cr
The method for effect calculation. Currently only `'pd'` (partial dependence) is supported.}

\item{feature.set}{(`character` or `NULL`)\cr
Optional. Subset of features to use for effect calculation. If `NULL`, all features are used.}

\item{split.feature}{(`character` or `NULL`)\cr
Optional. Features to consider for splitting at each node. If `NULL`, all features are considered.}

\item{target.feature.name}{(`character(1)`)\cr
The name of the target feature in the data to explain.}

\item{n.split}{(`integer(1)`)\cr
The maximum depth of the tree (number of splits to perform).}

\item{impr.par}{(`numeric(1)`)\cr
Improvement threshold parameter for splitting. Controls minimum improvement required to split a node.}

\item{min.node.size}{(`integer(1)`)\cr
Minimum number of samples required in a node to allow further splitting.}

\item{n.quantiles}{(`integer(1)` or `NULL`)\cr
Optional. Number of quantiles to use for candidate split points (for numeric features). If `NULL`, use default.}
}
\value{
(`list`)\cr
  A list of lists representing the tree structure. Each element is a list of Node objects (or `NULL` for terminal nodes) at a given depth.
}
\description{
Constructs a binary tree based on feature effects, splitting nodes according to heterogeneity in the effect profiles.
The tree is built recursively up to a specified depth or until improvement thresholds are met.
}
\details{
The function prepares the data, initializes the root node, and recursively splits nodes based on reduction in heterogeneity of the effect profiles. Splitting stops when the improvement is below a threshold or the minimum node size is reached.
}
\examples{
# Example usage (assuming effect and data are prepared):
# tree <- build_tree(effect, data, target.feature.name = "target")
}
