% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gadgetTree.R
\name{gadgetTree}
\alias{gadgetTree}
\title{gadgetTree: Generalized Additive Decision Tree (R6 class)}
\description{
Main class for growing, managing, and visualizing effect-based decision trees using a modular strategy (e.g., pdStrategy).
}
\details{
This class manages the overall tree structure and delegates effect-specific operations (such as splitting and plotting) to the provided strategy object. It is the main entry point for fitting and visualizing effect-based decision trees in the gadget package.
}
\section{Fields}{

\describe{
  \item{strategy}{Strategy object (e.g., pdStrategy) that implements effect-specific logic.}
  \item{root}{Root node of the tree (Node object).}
  \item{tree}{List of lists representing the tree structure at each depth.}
  \item{n.split}{Maximum number of splits (tree depth minus one).}
  \item{impr.par}{Improvement threshold for splitting.}
  \item{min.node.size}{Minimum number of samples required in a node to allow further splitting.}
  \item{n.quantiles}{Number of quantiles for candidate split points (numeric features).}
  \item{split_benchmark}{List of timing information for each split (for benchmarking).}
}
}

\section{Methods}{

\describe{
  \item{initialize(strategy, n.split = 2, impr.par = 0.1, min.node.size = 10, n.quantiles = NULL)}{
    Constructor for the tree object.
    @param strategy (R6 object)\cr
      Strategy object implementing effect-specific logic (e.g., pdStrategy).
    @param n.split (integer(1))\cr
      Maximum number of splits (tree depth minus one).
    @param impr.par (numeric(1))\cr
      Improvement threshold for splitting.
    @param min.node.size (integer(1))\cr
      Minimum number of samples required in a node to allow further splitting.
    @param n.quantiles (integer(1) or NULL)\cr
      Number of quantiles for candidate split points (numeric features). If NULL, use default.
  }
  \item{fit(effect, data, target.feature.name, feature.set = NULL, split.feature = NULL)}{
    Fit the tree to the provided data and effect object.
    @param effect (R6 object or list)\cr
      Object containing feature effect results.
    @param data (data.frame)\cr
      Data frame containing features and the target variable.
    @param target.feature.name (character(1))\cr
      Name of the target feature to explain.
    @param feature.set (character or NULL)\cr
      Optional. Subset of features to use for effect calculation. If NULL, all features are used.
    @param split.feature (character or NULL)\cr
      Optional. Features to consider for splitting at each node. If NULL, all features are considered.
    @return (gadgetTree object, invisibly)\cr
      The fitted tree object.
  }
  \item{plot(effect, data, target.feature.name, depth = NULL, node.id = NULL, features = NULL, ...)}{
    Visualize the tree structure and effect plots for each node.
    @param effect (R6 object or list)\cr
      Object containing feature effect results.
    @param data (data.frame)\cr
      Data frame.
    @param target.feature.name (character(1))\cr
      Name of the target feature to explain.
    @param depth (integer or NULL)\cr
      Depth(s) to visualize (optional).
    @param node.id (integer or NULL)\cr
      Node id(s) to visualize (optional).
    @param features (character or NULL)\cr
      Features to visualize (optional).
    @param ... Additional plotting arguments.
    @return (list)\cr
      List of ggplot2 objects for different depths and nodes.
  }
  \item{plot_tree_structure()}{Visualize the tree structure as a graph.}
  \item{extract_split_info()}{Extract split information for all nodes in the tree.}
}
}

\examples{
# Example: Fit and plot a PD tree using pdStrategy and gadgetTree
# (Assuming effect and data are prepared)
pd_strat <- pdStrategy$new()
tree <- gadgetTree$new(strategy = pd_strat, n.split = 2)
tree$fit(effect, data, target.feature.name = "target")
tree$plot(effect, data, target.feature.name = "target")
tree$plot_tree_structure()
split_info <- tree$extract_split_info()

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-gadgetTree-new}{\code{gadgetTree$new()}}
\item \href{#method-gadgetTree-fit}{\code{gadgetTree$fit()}}
\item \href{#method-gadgetTree-plot}{\code{gadgetTree$plot()}}
\item \href{#method-gadgetTree-plot_tree_structure}{\code{gadgetTree$plot_tree_structure()}}
\item \href{#method-gadgetTree-extract_split_info}{\code{gadgetTree$extract_split_info()}}
\item \href{#method-gadgetTree-clone}{\code{gadgetTree$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-new"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$new(
  strategy,
  n.split = 2,
  impr.par = 0.1,
  min.node.size = 10,
  n.quantiles = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-fit"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-fit}{}}}
\subsection{Method \code{fit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$fit(
  effect,
  data,
  target.feature.name,
  feature.set = NULL,
  split.feature = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-plot"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-plot}{}}}
\subsection{Method \code{plot()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$plot(
  effect,
  data,
  target.feature.name,
  depth = NULL,
  node.id = NULL,
  features = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-plot_tree_structure"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-plot_tree_structure}{}}}
\subsection{Method \code{plot_tree_structure()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$plot_tree_structure()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-extract_split_info"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-extract_split_info}{}}}
\subsection{Method \code{extract_split_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$extract_split_info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gadgetTree-clone"></a>}}
\if{latex}{\out{\hypertarget{method-gadgetTree-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gadgetTree$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
