// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// search_best_split_cpp
DataFrame search_best_split_cpp(DataFrame Z, List Y, int min_node_size, Nullable<int> n_quantiles);
RcppExport SEXP _gadget_search_best_split_cpp(SEXP ZSEXP, SEXP YSEXP, SEXP min_node_sizeSEXP, SEXP n_quantilesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type min_node_size(min_node_sizeSEXP);
    Rcpp::traits::input_parameter< Nullable<int> >::type n_quantiles(n_quantilesSEXP);
    rcpp_result_gen = Rcpp::wrap(search_best_split_cpp(Z, Y, min_node_size, n_quantiles));
    return rcpp_result_gen;
END_RCPP
}
// search_best_split_point_cpp
List search_best_split_point_cpp(SEXP z, List Y, Nullable<int> n_quantiles, bool is_categorical, int min_node_size);
RcppExport SEXP _gadget_search_best_split_point_cpp(SEXP zSEXP, SEXP YSEXP, SEXP n_quantilesSEXP, SEXP is_categoricalSEXP, SEXP min_node_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Nullable<int> >::type n_quantiles(n_quantilesSEXP);
    Rcpp::traits::input_parameter< bool >::type is_categorical(is_categoricalSEXP);
    Rcpp::traits::input_parameter< int >::type min_node_size(min_node_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(search_best_split_point_cpp(z, Y, n_quantiles, is_categorical, min_node_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gadget_search_best_split_cpp", (DL_FUNC) &_gadget_search_best_split_cpp, 4},
    {"_gadget_search_best_split_point_cpp", (DL_FUNC) &_gadget_search_best_split_point_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gadget(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
